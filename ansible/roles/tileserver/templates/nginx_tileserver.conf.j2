server {
    {% if tileserver_nginx_listen != '' %}
    {# If tileserver_nginx_listen contains host:port (e.g. 127.0.0.1:8081) split and use the port for the IPv6 listen #}
    {% set _parts = tileserver_nginx_listen.split(':') %}
    {% if _parts | length >= 2 %}
    listen {{ tileserver_nginx_listen }};
    listen [::]:{{ _parts[-1] }};
    {% else %}
    listen {{ tileserver_nginx_listen }};
    listen [::]:{{ tileserver_nginx_listen }};
    {% endif %}
    {% else %}
    listen 80 default_server;
    listen [::]:80 default_server;
    {% endif %}

    server_name _;

    root /var/lib/tileserver/web;

    # Serve static web content under / (map.html is copied to /map.html)
    location / {
        # Fallback to the demo page so requests to / (forwards from a Cloudflare hostname) return the demo
        try_files $uri $uri/index.html /map.html;
        # Add common headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Proxy tiles requests to tileserver and set CORS headers
    location /data/ {
        # Respond to preflight requests quickly
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Accept, Accept-Encoding, Authorization, Content-Type, Range' always;
            add_header 'Access-Control-Max-Age' 1728000;
            return 204;
        }

        proxy_pass http://127.0.0.1:{{ tileserver_port }}/data/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_buffering off;

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Accept, Accept-Encoding, Authorization, Content-Type, Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;
    }

    # Proxy TileServer GL styles to enable CORS (use ^~ to take precedence over regex .json rule)
    location ^~ /styles/ {
        proxy_pass http://127.0.0.1:{{ tileserver_port }}/styles/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_buffering off;

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Accept, Accept-Encoding, Authorization, Content-Type' always;
    }

    # Sprites and style files - ensure CORS so browser can load sprite.json/png
    location /maptiler-basic/ {
        add_header 'Access-Control-Allow-Origin' '*' always;
        try_files $uri $uri/ =404;
    }

    # JSON files (styles served statically) - ensure CORS
    location ~* \.json$ {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        try_files $uri =404;
    }

    # Fonts (glyphs)
    location /fonts/ {
        add_header 'Access-Control-Allow-Origin' '*' always;
        try_files $uri $uri/ =404;
    }

    # Optional: prevent indexing
    location = /robots.txt {
        return 200 "User-agent: *\nDisallow: /\n";
        add_header Content-Type text/plain;
    }
}
